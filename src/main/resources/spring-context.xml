<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:database.properties,classpath:config.properties" />
	
	<bean id="dataSource1" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName1}" />
		<property name="url" value="${jdbc.url1}" />
		<property name="username" value="${jdbc.username1}" />
		<property name="password" value="${jdbc.password1}" />
		<property name="timeBetweenEvictionRunsMillis" value="180000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="30" />
		<property name="initialSize" value="5" />
		<property name="maxActive" value="30" />
		<property name="maxWait" value="1000" />
		<property name="maxIdle" value="50" />
		<property name="minIdle" value="30" />
		<property name="testOnBorrow" value="true" />
		<property name="validationQuery" value="select 1 from dual" />
	</bean>
	<bean id="dataSource2" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName2}" />
		<property name="url" value="${jdbc.url2}" />
		<property name="username" value="${jdbc.username2}" />
		<property name="password" value="${jdbc.password2}" />
		<property name="timeBetweenEvictionRunsMillis" value="180000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="30" />
		<property name="initialSize" value="5" />
		<property name="maxActive" value="30" />
		<property name="maxWait" value="1000" />
		<property name="maxIdle" value="50" />
		<property name="minIdle" value="30" />
		<property name="testOnBorrow" value="true" />
		<property name="validationQuery" value="select 1 from dual" />
	</bean>

	<bean id="jdbcTemplateMysql1" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource1" />
	</bean>
	<bean id="jdbcTemplateMysql2" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource2" />
	</bean>
	 <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory1" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource1" />
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="mapperLocations" value="classpath:mapping/source1/*.xml"></property>
    </bean>
    <bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource2" />
        <!-- 自动扫描mapping.xml文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="mapperLocations" value="classpath:mapping/source2/*.xml"></property>
    </bean>
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.bm.**.dao.source1" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory1"></property>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.bm.**.dao.source2" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory2"></property>
    </bean>

	<!-- transaction support-->
	<!-- PlatformTransactionMnager -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource1" />
	</bean>
	<!-- enable transaction annotation support -->
	<tx:annotation-driven proxy-target-class="false" transaction-manager="txManager" />

</beans>